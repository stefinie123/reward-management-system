openapi: 3.0.1
info:
  title: Service Openapi Yaml
  version: 1.0.0
servers:
- url: "{server}:{port}/"
  variables:
    server:
      default: http://localhost
    port:
      default: "9090"
paths:
  /card-details/{userId}:
    get:
      operationId: getCardDetailsUserid
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorPayload'
        "200":
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardDetails'
  /rewards:
    get:
      operationId: getRewards
      responses:
        "200":
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RewardDetails'
  /generate-qr:
    get:
      operationId: getGenerateQr
      parameters:
      - name: text
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Ok
          content:
            text/plain:
              schema:
                type: string
components:
  schemas:
    ErrorPayload:
      type: object
      properties:
        reason:
          type: string
          description: Reason phrase
        path:
          type: string
          description: Request path
        method:
          type: string
          description: Method type of the request
        message:
          type: string
          description: Error message
        timestamp:
          type: string
          description: Timestamp of the error
        status:
          type: integer
          description: Relevant HTTP status code
          format: int32
    RewardDetails:
      required:
      - description
      - name
      - totalPoints
      - value
      type: object
      properties:
        name:
          type: string
        value:
          type: integer
          format: int64
        totalPoints:
          type: integer
          format: int64
        description:
          type: string
    CardDetails:
      required:
      - availableCredit
      - cardNumber
      - currentBalance
      - dueAmount
      - lastStatementBalance
      - rewardPoints
      - userId
      type: object
      properties:
        userId:
          type: string
        cardNumber:
          type: integer
          format: int64
        rewardPoints:
          type: integer
          format: int64
        currentBalance:
          type: integer
          format: int64
        dueAmount:
          type: integer
          format: int64
        lastStatementBalance:
          type: integer
          format: int64
        availableCredit:
          type: integer
          format: int64
